<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.shenghui.jd.dao.system.order.mapper.OrderMapper">

    <resultMap id="orderResult" type="cn.shenghui.jd.dao.system.order.model.Order">
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="order_pid" jdbcType="VARCHAR" property="orderPid"/>
        <result column="total_price" jdbcType="DECIMAL" property="totalPrice"/>
        <result column="order_status" jdbcType="VARCHAR" property="orderStatus"/>
        <result column="order_time" jdbcType="VARCHAR" property="orderTime"/>
        <result column="arrival_time" jdbcType="VARCHAR" property="arrivalTime"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
    </resultMap>

    <resultMap id="orderDetailsResult" type="cn.shenghui.jd.dao.system.order.model.OrderDetails">
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <id column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_num" jdbcType="INTEGER" property="productNum"/>
        <result column="unit_price" jdbcType="DECIMAL" property="unitPrice"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
    </resultMap>

    <resultMap id="orderProductsResult" type="cn.shenghui.jd.dao.system.order.dto.OrderProduct">
        <id column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_num" jdbcType="INTEGER" property="productNum"/>
        <result column="available_num" jdbcType="INTEGER" property="availableNum"/>
        <result column="frozen_num" jdbcType="INTEGER" property="frozenNum"/>
    </resultMap>

    <select id="getOrderList" parameterType="cn.shenghui.jd.dao.system.order.dto.QueryOrder" resultMap="orderResult">
        select *
        from `order`
        <where>
            del_flag = 0
            <if test="userId != null and userId != ''">and user_id = #{userId,jdbcType=VARCHAR}</if>
            <if test="content != null and content != ''">
                and order_id like concat('%', #{content,jdbcType=VARCHAR}, '%')
                or user_id like concat('%', #{content,jdbcType=VARCHAR}, '%')
                or order_pid like concat('%', #{content,jdbcType=VARCHAR}, '%')
                or address like concat('%', #{content,jdbcType=VARCHAR}, '%')
            </if>
            <if test="priceMin != null">and total_price &gt;= #{priceMin,jdbcType=DECIMAL}</if>
            <if test="priceMax != null">and total_price &lt;= #{priceMax,jdbcType=DECIMAL}</if>
            <if test="orderStatus != null and orderStatus != ''">and order_status = #{orderStatus,jdbcType=VARCHAR}</if>
            <if test="start != null and start != ''">and order_time &gt;= #{start,jdbcType=VARCHAR}
                or arrival_time &gt;= #{start,jdbcType=VARCHAR}
            </if>
            <if test="end != null and end != ''">and order_time &lt;= #{end,jdbcType=VARCHAR}
                or arrival_time &lt;= #{end,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="getOrderDetailsList" resultMap="orderDetailsResult">
        select *
        from order_details
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <select id="getProductsByOrderId" parameterType="java.lang.String" resultMap="orderProductsResult">
        select o.product_id,
               o.product_num,
               p.available_num,
               p.frozen_num
        from order_details o
                 inner join product p on o.product_id = p.product_id
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <select id="getOrder" parameterType="java.lang.String" resultMap="orderResult">
        select *
        from `order`
        where del_flag = 0
          and order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <insert id="addOrder" parameterType="cn.shenghui.jd.dao.system.order.model.Order">
        insert into `order`
        values (#{orderId,jdbcType=VARCHAR},
                #{userId,jdbcType=VARCHAR},
                #{orderPid,jdbcType=VARCHAR},
                #{totalPrice,jdbcType=DECIMAL},
                #{orderStatus,jdbcType=VARCHAR},
                #{orderTime,jdbcType=VARCHAR},
                #{arrivalTime,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR},
                0)
    </insert>

    <insert id="addOrderDetails" parameterType="cn.shenghui.jd.dao.system.order.model.OrderDetails">
        insert into order_details
        values (#{orderId,jdbcType=VARCHAR},
                #{productId,jdbcType=VARCHAR},
                #{productName,jdbcType=VARCHAR},
                #{productNum,jdbcType=INTEGER},
                #{unitPrice,jdbcType=DECIMAL},
                #{description,jdbcType=VARCHAR})
    </insert>

    <update id="updateOrderStatus">
        update `order`
        set order_status = #{orderStatus,jdbcType=VARCHAR}
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>

    <select id="countOrder" resultType="int">
        select count(*)
        from `order`
    </select>

    <select id="countOrderDetails" resultType="int">
        select count(*)
        from order_details
    </select>

    <select id="ifParent" parameterType="java.lang.String" resultType="int">
        select count(*)
        from `order`
        where order_pid = #{orderId, jdbcType= VARCHAR}
    </select>

    <select id="ifAllThisStatus" parameterType="java.lang.String" resultType="int">
        select count(*)
        from `order`
        where order_pid = #{orderPid,jdbcType=VARCHAR}
          and order_status != #{orderStatus,jdbcType=VARCHAR}
    </select>
</mapper>